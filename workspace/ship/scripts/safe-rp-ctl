#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
export ROOT_DIR

# Load deployment configuration if present
if [[ -f "$ROOT_DIR/deploy.conf" ]]; then
  # shellcheck disable=SC1091
  source "$ROOT_DIR/deploy.conf"
fi

# shellcheck source=lib/core.sh
source "$SCRIPT_DIR/lib/core.sh"
# shellcheck source=lib/docker_ops.sh
source "$SCRIPT_DIR/lib/docker_ops.sh"
# shellcheck source=lib/release_ops.sh
source "$SCRIPT_DIR/lib/release_ops.sh"
# shellcheck source=lib/manifest_ops.sh
source "$SCRIPT_DIR/lib/manifest_ops.sh"
# shellcheck source=lib/ssh_ops.sh
source "$SCRIPT_DIR/lib/ssh_ops.sh"

cmd="${1:-}"
shift || true
case "$cmd" in
  build-local)
    rc_build_local "$@"
    ;;
  start)
    rc_start "$@"
    ;;
  deploy-prod)
    rc_deploy_prod
    ;;
  rollback)
    rc_rollback "$@"
    ;;
  fetch-seed)
    rc_fetch_seed "$@"
    ;;
  clone-prod)
    log_warn "Command 'clone-prod' is deprecated. Use 'fetch-seed' instead."
    rc_fetch_seed "$@"
    ;;
  list-releases)
    rc_list_releases
    ;;
  describe-release)
    rc_describe_release "$@"
    ;;
  init-wip)
    rc_init_wip "$@"
    ;;
  build-prep)
    rc_build_prep "$@"
    ;;
  start-seed)
    rc_start_seed "$@"
    ;;
  start-wip)
    rc_start_wip "$@"
    ;;
  start-prep)
    rc_start_prep "$@"
    ;;
  start-ship)
    rc_start_ship "$@"
    ;;
  init-stage)
    rc_init_stage "$@"
    ;;
  stop-all)
    rc_stop_all "$@"
    ;;
  ensure-external)
    rc_ensure_external_services "$@"
    ;;
  *)
    log_error "Unknown command: $cmd"
    exit 1
    ;;
esac
